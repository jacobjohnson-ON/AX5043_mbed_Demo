// Demo application using an mbed MCU to control an AX5043 transceiver in master Tx mode
#include "ax5043.h"
#include "mbed.h"

// mbed OS global(s)
Serial pc(USBTX, USBRX);

// Application global(s)
#define tx_wait_seconds 1
uint16_t packet_counter = 0;
uint8_t demo_packet[] = {0x00,0x33,0x44,0x00,0x00,0x55,0x66,0x77,0x88};

// Application function prototypes
void transmit_packet();

// Main application function
int main() {

	ax5043_spi_init();

	// Configure the serial speed.
    pc.baud(115200);
    pc.printf("AX5043 Transmitter master demo application with mbed MCU\n\n");

    // Reset the AX5043 through SPI
    pc.printf("\nResetting AX5043 chip...\n");
    ax5043_reset();
    pc.printf("\nDone...\n\n");

    // Setup the registers using the template generated by RadioLab
    pc.printf("\nSetting up AX5043 radio registers...\n");
    ax5043_radio_setup_tx();
    pc.printf("\nDone...\n\n");

    // Do the auto ranging
    pc.printf("\nPerforming AX5043 PLL auto-ranging...\n");
    if (ax5043_pll_ranging()) {
    	pc.printf("\n\tPLL ranging has failed...\n");
    }
    else {
    	pc.printf("\n\tPLL ranging successful...\n");
    }
    pc.printf("\nDone...\n\n");

    while(1) {        
    	packet_counter++;
        pc.printf("Transmitting packet number 0X%04X...\n", packet_counter);
    	transmit_packet();
        pc.printf("\nDone...\n\n");
        wait(tx_wait_seconds);
    }
}

void transmit_packet() {
    // Insert length byte
    demo_packet[0] = sizeof(demo_packet);

    // Insert packet counter
    demo_packet[3] = packet_counter & 0xFF;
    demo_packet[4] = (packet_counter >> 8) & 0xFF;

    ax5043_transmit(demo_packet, sizeof(demo_packet)); // Byte 0 assumed to be the len byte; Sync word automatically transmitted before packet
}
